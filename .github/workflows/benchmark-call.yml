name: "Benchmark: Coordinate Runner & Reporting"

on:
  workflow_dispatch:
    inputs:
      benchmark_name:
        type: choice
        required: true
        description: The name of the benchmark to run
        options:
          - vm_verify_fibair
          - single_rw
  workflow_call:
    inputs:
      benchmark_name:
        type: string
        required: true
        description: The name of the benchmark to run

env:
  RESULT_PATH: benchmark/github/results/${{ inputs.benchmark_name }}.md

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: [self-hosted, coordinator, staging]
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0a071ac3e1220fe60 # arm64-rust-dev-32gb
          # ami-06dd8940c223fd887 # arm64-rust-dev-1024gb
          ec2-instance-type: r7g.8xlarge
          subnet-id: subnet-08094bf4edad62d10 # staging tooling private subnet
          security-group-id: sg-09543a06c701894f8 # allow all outbound
          iam-role-name: github-temp-runner # IAM role name to attach to the created EC2 runner

  bench-new:
    name: Run benchmark on workflow ref/branch
    needs:
      - start-runner
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Setup gh command line.
        if: github.event_name == 'push'
        uses: dev-hanz-ops/install-gh-cli-action@v0.1.0

      ######################################################
      # Run a different benchmark based on benchmark_name:
      - name: Run benchmark
        if: inputs.benchmark_name == 'vm_verify_fibair'
        run: |
          RUSTFLAGS="-Ctarget-cpu=native" cargo run --release --bin benchmark --features parallel -- vm_verify_fibair -n 16

      - name: Run benchmark
        if: inputs.benchmark_name == 'single_rw'
        run: |
          RUSTFLAGS="-Ctarget-cpu=native" cargo run --release --bin benchmark --features parallel -- rw -r 90 -w 10 --config-folder benchmark/config/single_rw
      ######################################################
      # If we want this read from main, split this into a different job
      - name: Get previous benchmark value
        id: get-previous-benchmark
        run: |
          echo 'previous-benchmark<<EOF' >> $GITHUB_ENV
          echo  "$(<${{ env.RESULT_PATH }})" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Update benchmark value
        id: update-benchmark
        run: |
          mkdir -p benchmark/github/results
          mv benchmark/tmp/_result.md ${{ env.RESULT_PATH }}
          echo 'new-benchmark<<EOF' >> $GITHUB_ENV
          echo "$(<${{ env.RESULT_PATH }})" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Remove previous comment (if exists)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const previousBenchmark = process.env['previous-benchmark'];
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            for (const comment of comments.data) {
              if (comment.body.startsWith(`# Previous Benchmark\n${previousBenchmark}`)) {
                console.log("deleting comment ", comment.id);
                await github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                });
              }
            }

      - name: Add comment to pull request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const previousBenchmark = process.env['previous-benchmark'];
            const newBenchmark = process.env['new-benchmark'];

            console.log(newBenchmark);

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `# Previous Benchmark\n${previousBenchmark}\n\n# New Benchmark\n${newBenchmark}\n`
            });

      - name: Commit and push changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          export HOME=~
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="benchmark-${{ inputs.benchmark_name }}-${{ github.run_id }}"
          git checkout -b ${BRANCH_NAME}
          git add ${{ env.RESULT_PATH }}
          git commit -m "Update benchmark"
          git push origin ${BRANCH_NAME}
          gh pr create -B main -H ${BRANCH_NAME} --title 'Update benchmark (${{ inputs.benchmark_name }})' --body 'Created by Github action'

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - bench-new # wait for bench-new to finish
    runs-on: [self-hosted, coordinator, staging]
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
