name: ECC Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
    paths:
      - "stark-backend/**"
      - "circuits/primitives/**"
      - "vm/**"
      - "toolchain/native-compiler/**"
      - "lib/ecc/**"
      - "lib/ecc-execution/**"
      - "cargo-axiom/**"
      - "extensions/ecc/circuit/**"
      - "extensions/pairing/circuit/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  AXIOM_FAST_TEST: "1"

jobs:
  tests:
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=32cpu-linux-arm64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@nextest

      - name: Run ecc-execution crate tests
        working-directory: lib/ecc-execution
        run: |
          cargo nextest run --cargo-profile=fast

      - name: Run ecc-circuits crate tests
        working-directory: extensions/ecc/circuit
        run: |
          cargo nextest run --cargo-profile=fast 

      - name: Run pairing-circuits crate tests
        working-directory: extensions/pairing/circuit
        run: |
          RUST_MIN_STACK=8388608 cargo nextest run --cargo-profile=fast 

      - name: Run axvm-ecc crate tests
        working-directory: lib/ecc
        run: |
          RUST_MIN_STACK=8388608 cargo nextest run --features halo2curves

      - name: Install cargo-axiom
        working-directory: cargo-axiom
        run: |
          rustup component add rust-src --toolchain nightly-aarch64-unknown-linux-gnu
          cargo install --force --locked --path .

      - name: Build axvm-ecc crate for axvm
        working-directory: lib/ecc
        run: |
          cargo axiom build
