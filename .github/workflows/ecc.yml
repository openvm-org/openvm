name: ECC Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
    paths:
      - "crates/circuits/primitives/**"
      - "crates/vm/**"
      - "crates/cli/**"
      - "extensions/ecc/**"
      - "extensions/native/compiler/**"
      - "extensions/pairing/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  OPENVM_FAST_TEST: "1"

jobs:
  tests:
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=32cpu-linux-arm64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@nextest

      # TEMPORARY
      - name: Give GitHub Actions access to private repositories
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GH_ACTIONS_DEPLOY_PRIVATE_KEY }}

      - name: Run pairing-guest crate tests
        working-directory: extensions/pairing/guest
        run: |
          cargo nextest run --cargo-profile=fast --features=bn254,bls12_381,halo2curves

      - name: Run ecc-circuits crate tests
        working-directory: extensions/ecc/circuit
        run: |
          cargo nextest run --cargo-profile=fast

      - name: Run pairing-circuits crate tests
        working-directory: extensions/pairing/circuit
        run: |
          RUST_MIN_STACK=8388608 cargo nextest run --cargo-profile=fast

      - name: Install cargo-openvm
        working-directory: crates/cli
        run: |
          rustup component add rust-src --toolchain nightly-2024-10-30-aarch64-unknown-linux-gnu
          cargo install --force --locked --path .

      - name: Build openvm-ecc-guest crate for openvm
        working-directory: extensions/ecc/guest
        run: |
          cargo openvm build --no-transpile
