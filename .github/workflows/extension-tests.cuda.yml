name: Extension Tests (CUDA)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
    paths:
      - "crates/circuits/**"
      - "crates/vm/**"
      - "crates/toolchain/**"
      - "extensions/**"
      - "Cargo.toml"
      - ".github/workflows/extension-tests.cuda.yml"
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  OPENVM_FAST_TEST: "1"

jobs:
  extension-tests-cuda:
    runs-on:
      - runs-on=${{ github.run_id }}-extension-tests-cuda-${{ github.run_attempt }}
      - runner=test-gpu-nvidia
      - image=ubuntu24-gpu-x64
      - tag=extension-cuda-tests
      - extras=s3-cache

    steps:
      - uses: runs-on/action@v2
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            common:
              - "crates/circuits/**"
              - "crates/vm/**"
              - "crates/toolchain/**"
              - ".github/workflows/extension-tests.cuda.yml"
            rv32im:
              - "extensions/rv32im/**"
            native:
              - "extensions/native/**"
            keccak256:
              - "extensions/keccak256/**"
            sha256:
              - "extensions/sha256/**"
            bigint:
              - "extensions/bigint/**"
            algebra:
              - "extensions/algebra/**"
            ecc:
              - "extensions/ecc/**"
            pairing:
              - "extensions/pairing/**"

      - name: Skip if no changes
        if: steps.filter.outputs.matched == 'false'
        run: |
          echo "No relevant changes, skipping tests."
          exit 0

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@nextest

      - name: Check CUDA status and set environment variables
        run: |
          nvcc --version
          echo "NEXTEST_ENV=CUDA_OPT_LEVEL=1" >> $GITHUB_ENV
          echo "FEATURE_ARGS=--features=cuda" >> $GITHUB_ENV
          echo "CIRCUIT_TEST_FILTER=cuda" >> $GITHUB_ENV

      - name: Run extension tests
        env:
          FILTER_OUTPUTS: ${{ toJSON(steps.filter.outputs) }}
        run: |
          COMMON_CHANGED=$(echo $FILTER_OUTPUTS | jq -r .common)
          EXTENSIONS=(rv32im native keccak256 sha256 bigint algebra ecc pairing)

          for ext in "${EXTENSIONS[@]}"; do
            ext_changed=$(echo $FILTER_OUTPUTS | jq -r .$ext)
            if [[ "$COMMON_CHANGED" == "true" || "$ext_changed" == "true" ]]; then
              echo "::group::Running tests for $ext"

              # Run circuit tests
              if [ -d "extensions/$ext/circuit" ]; then
                pushd extensions/$ext/circuit
                ${{ env.NEXTEST_ENV }} cargo nextest run ${{ env.CIRCUIT_TEST_FILTER }} ${{ env.FEATURE_ARGS }} --profile=heavy --no-tests=pass
                popd
              fi

              # Run integration tests
              if [ -d "extensions/$ext/tests" ]; then
                pushd extensions/$ext/tests
                rustup component add rust-src --toolchain nightly-2025-02-14
                ${{ env.NEXTEST_ENV }} cargo nextest run ${{ env.FEATURE_ARGS }} --profile=heavy --no-tests=pass
                popd
              fi
              echo "::endgroup::"
            else
              echo "Skipping tests for $ext as no relevant files changed."
            fi
          done
