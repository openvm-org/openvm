name: Extension Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
    paths:
      - "crates/circuits/**"
      - "crates/vm/**"
      - "crates/toolchain/**"
      - "extensions/**"
      - "Cargo.toml"
      - ".github/workflows/extension-tests.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  OPENVM_FAST_TEST: "1"

jobs:
  extension-tests:
    strategy:
      matrix:
        extension:
          - { name: "rv32im", path: "rv32im", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "rv32im", path: "rv32im", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "native", path: "native", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "native", path: "native", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "keccak256", path: "keccak256", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "keccak256", path: "keccak256", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "sha256", path: "sha256", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "sha256", path: "sha256", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "bigint", path: "bigint", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "bigint", path: "bigint", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "algebra", path: "algebra", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "algebra", path: "algebra", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "ecc", path: "ecc", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
          - { name: "ecc", path: "ecc", family: "g4dn.2xlarge", image: "ubuntu24-gpu-x64" }
          - { name: "pairing", path: "pairing", family: "c7g.16xlarge", image: "ubuntu24-full-arm64" }
      # Ensure tests run in parallel even if one fails
      fail-fast: false

    runs-on:
      - runs-on=${{ github.run_id }}
      - family=${{ matrix.extension.family }}
      - image=${{ matrix.extension.image }}
      - tag=extension-${{ matrix.extension.name }}
      - extras=s3-cache

    steps:
      - uses: runs-on/action@v1
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            - "crates/circuits/**"
            - "crates/vm/**"
            - "crates/toolchain/**"
            - "extensions/${{ matrix.extension.path }}/**"
            - ".github/workflows/extension-tests.yml"
      - name: Skip if no changes
        if: steps.filter.outputs.matched == 'false'
        run: |
          echo "No relevant changes, skipping tests."
          exit 0

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@nextest

      - name: Check CUDA status and set environment variables
        if: contains(matrix.extension.image, 'gpu')
        run: |
          nvidia-smi
          nvidia-smi -L
          nvcc --version

          echo "FEATURE_ARGS=--features=cuda" >> $GITHUB_ENV
          echo "CIRCUIT_TEST_ENV=CUDA_OPT_LEVEL=1" >> $GITHUB_ENV
          echo "CIRCUIT_TEST_FILTER=cuda" >> $GITHUB_ENV

      - name: Run ${{ matrix.extension.name }} circuit crate tests
        working-directory: extensions/${{ matrix.extension.path }}/circuit
        run: |
          TEST_THREADS="--test-threads=32"
          if [[ "${{ matrix.extension.name }}" == "algebra" ]]; then
            TEST_THREADS="--test-threads=4"
          fi
          ${{ env.CIRCUIT_TEST_ENV }} cargo nextest run ${{ env.CIRCUIT_TEST_FILTER }} --cargo-profile=fast ${{ env.FEATURE_ARGS }} $TEST_THREADS --no-tests=pass

      - name: Run ${{ matrix.extension.name }} guest crate tests
        if: ${{ !contains(matrix.extension.image, 'gpu') && hashFiles(format('extensions/{0}/guest', matrix.extension.path)) != '' }}
        working-directory: extensions/${{ matrix.extension.path }}/guest
        run: |
          GUEST_FEATURE_ARGS=""
          if [[ "${{ matrix.extension.name }}" == "pairing" ]]; then
            GUEST_FEATURE_ARGS="--features=bn254,bls12_381,halo2curves"
          fi
          cargo nextest run --cargo-profile=fast $GUEST_FEATURE_ARGS --no-tests=pass

      - name: Run ${{ matrix.extension.name }} integration tests
        if: hashFiles(format('extensions/{0}/tests', matrix.extension.path)) != ''
        working-directory: extensions/${{ matrix.extension.path }}/tests
        run: |
          rustup component add rust-src --toolchain nightly-2025-02-14
          cargo nextest run --cargo-profile=fast ${{ env.FEATURE_ARGS }} --profile=heavy --no-tests=pass
