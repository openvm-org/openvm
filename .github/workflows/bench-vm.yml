name: Run Fibonacci Air recursion benchmark

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
    paths:
      - "stark-backend/**"
      - "vm/**"
      - "compiler/**"
      - "recursion/**"
  push:
    branches: ["main"]
    paths:
      - "stark-backend/**"
      - "vm/**"
      - "compiler/**"
      - "recursion/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: [self-hosted, coordinator, staging]
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0a071ac3e1220fe60 # arm64-rust-dev-32gb
          # ami-06dd8940c223fd887 # arm64-rust-dev-1024gb
          ec2-instance-type: r7g.8xlarge
          subnet-id: subnet-08094bf4edad62d10 # staging tooling private subnet
          security-group-id: sg-09543a06c701894f8 # allow all outbound
          iam-role-name: github-temp-runner # IAM role name to attach to the created EC2 runner

  bench-new:
    name: Run benchmark on workflow ref/branch
    needs:
      - start-runner
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
 
      - name: Setup gh command line.
        if: github.event_name == 'push'
        uses: actions4gh/setup-gh@v1

      - name: Run benchmark
        run: |
          RUSTFLAGS="-Ctarget-cpu=native" cargo run --release --bin benchmark --features parallel -- vm_verify_fibair -n 16

      - name: Get previous benchmark value
        id: get-previous-benchmark
        run: |
          echo "::set-output name=previous-benchmark::$(cat benchmark/github/results/vm_verify_fibair.json)"

      - name: Update benchmark value
        id: update-benchmark
        run: |
          mkdir -p benchmark/github/results
          mv benchmark/tmp/_result.json benchmark/github/results/vm_verify_fibair.json
          echo "::set-output name=new-benchmark::$(cat benchmark/github/results/vm_verify_fibair.json)"

      - name: Add comment to pull request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const previousBenchmark = `${{ steps.get-previous-benchmark.outputs.previous-benchmark }}`;
            const newBenchmark = `${{ steps.update-benchmark.outputs.new-benchmark }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Benchmark (vm verify fibair) results:\n\nPrevious: ${previousBenchmark}\nCurrent: ${newBenchmark}`
            });

      - name: Commit and push changes
        if: github.event_name == 'push'
        run: |
          export HOME=~
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="benchmark-vm-${{ github.run_id }}"
          git checkout -b ${BRANCH_NAME}
          git add benchmark/github/results/vm_verify_fibair.json
          git commit -m "Update benchmark"
          git push origin ${BRANCH_NAME}
          gh pr create -B main -H ${BRANCH_NAME} --title 'Update benchmark (vm verify fibair)' --body 'Created by Github action'

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - bench-new # wait for bench-new to finish
    runs-on: [self-hosted, coordinator, staging]
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
