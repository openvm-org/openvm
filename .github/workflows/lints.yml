name: Lint Workspace

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=8cpu-linux-x64
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Generate docs
        run: |
          cargo doc --workspace  --exclude "openvm-benchmarks" --exclude "*-tests" --exclude "*-test"

      - name: Run fmt
        run: |
          cargo fmt --all -- --check

      - name: Run clippy
        run: |
          # list of features generated using:
          # echo -e "\033[1;32mAll unique features across workspace:\033[0m" && cargo metadata --format-version=1 --no-deps | jq -r '.packages[].features | to_entries[] | .key' | sort -u | sed 's/^/â€¢ /'
          cargo clippy --all-targets --all --tests --features "aggregation bench-metrics bls12_381 bn254 default entrypoint export-getrandom export-libm function-span getrandom halo2-compiler halo2curves heap-embedded-alloc k256 mimalloc nightly-features panic-handler parallel rust-runtime static-verifier std test-utils unstable" -- -D warnings
          cargo clippy --all-targets --all --tests --no-default-features --features "jemalloc jemalloc-prof" -- -D warnings
      
      - name: Run fmt for guest
        run: |
          # List all guest program crate paths
          for crate_path in benchmarks/programs/* examples/*; do
            # Check if Cargo.toml exists in the directory
            if [ -f "$crate_path/Cargo.toml" ]; then
              echo "Running cargo fmt for $crate_path"
              cargo fmt --manifest-path "$crate_path/Cargo.toml" --all -- --check 
            else
              echo "Skipping $crate_path as it does not contain a Cargo.toml"
            fi
          done

      - name: Run clippy for guest
        run: |
          # List all guest program crate paths
          for crate_path in benchmarks/programs/* examples/*; do
            # Check if Cargo.toml exists in the directory
            if [ -f "$crate_path/Cargo.toml" ]; then
              echo "Running cargo clippy for $crate_path"
              cargo clippy --manifest-path "$crate_path/Cargo.toml" --all-targets -- -D warnings
            else
              echo "Skipping $crate_path as it does not contain a Cargo.toml"
            fi
          done
