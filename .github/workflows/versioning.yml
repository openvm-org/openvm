# Workflow to verify versioning compatibility between main and patch versions
name: Verify Versioning Compatibility

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to compare against main (e.g., v1.2.0)'
        required: true
        default: 'v1.2.0'
        type: string

jobs:
  verify-versioning:
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=64cpu-linux-arm64
      - extras=s3-cache
    steps:
      - name: Set up environment
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      # Build and keygen from main
      - name: Build main
        run: cargo install --force --path crates/cli

      - name: Generate keys from main
        run: cargo openvm keygen --output-dir ./main-keys

      # Checkout and build keygen from tagged version
      - name: Checkout tagged version
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
          clean: false

      - name: Build tagged version
        run: cargo install --force --path crates/cli

      # TODO(yi): Change --vk-output to --output-dir after v1.3.0 release
      - name: Generate keys from tagged version
        run: |
          mkdir -p ./tagged-keys
          cargo openvm keygen --vk-output ./tagged-keys/app.vk
      # Compare keys
      - name: Compare verification keys
        run: |
          echo "Comparing verification keys between main and ${{ inputs.version }}..."
          if cmp ./main-keys/app.vk ./tagged-keys/app.vk; then
            echo "✅ Verification keys are identical - versioning policy maintained"
          else
            echo "❌ Verification keys differ - versioning policy violated"
            echo "Main branch vkey:"
            ls -la ./main-keys/app.vk
            echo "Tagged version vkey:"
            ls -la ./tagged-keys/app.vk
            exit 1
          fi
