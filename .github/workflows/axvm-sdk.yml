name: axVM SDK Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
    paths:
      - "stark-backend/**"
      - "circuits/primitives/**"
      - "vm/**"
      - "axvm-sdk/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  AXIOM_FAST_TEST: "1"

jobs:
  tests:
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=64cpu-linux-arm64

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: taiki-e/install-action@nextest

      - name: Install architecture specific tools
        run: |
          arch=$(uname -m)
          case $arch in
            arm64|aarch64)
              S5CMD_BIN="s5cmd_2.2.2_linux_arm64.deb"
              ;;
            x86_64|amd64)
              S5CMD_BIN="s5cmd_2.2.2_linux_amd64.deb"
              ;;
            *)
              echo "Unsupported architecture: $arch"
              exit 1
              ;;
          esac
          
          echo "Checking s5cmd"
          if type s5cmd &>/dev/null; then
              echo "s5cmd was installed."
          else
              TMP_DIR=/tmp/s5cmd
              rm -rf $TMP_DIR
              mkdir $TMP_DIR
              echo "s5cmd was not installed. Installing.."
              wget "https://github.com/peak/s5cmd/releases/download/v2.2.2/${S5CMD_BIN}" -P $TMP_DIR
              sudo dpkg -i "${TMP_DIR}/${S5CMD_BIN}"
          fi

      - name: Setup halo2
        working-directory: axvm-sdk
        run: |
          bash ../lib/recursion/trusted_setup_s3.sh

      - name: Run axvm-sdk crate tests
        working-directory: axvm-sdk
        run: |
          export RUST_BACKTRACE=1
          cargo nextest run --cargo-profile=fast --features parallel,static-verifier
