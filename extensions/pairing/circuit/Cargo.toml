[package]
name = "openvm-pairing-circuit"
description = "OpenVM circuit extension for elliptic curve pairing"
version.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
openvm-circuit-primitives = { workspace = true }
openvm-circuit-derive = { workspace = true }
openvm-circuit = { workspace = true }
openvm-ecc-guest = { workspace = true }
openvm-pairing-guest = { workspace = true, features = [
    "halo2curves",
    "bls12_381",
    "bn254",
] }
openvm-instructions = { workspace = true }
openvm-mod-circuit-builder = { workspace = true }
openvm-stark-backend = { workspace = true }
openvm-rv32im-circuit = { workspace = true }
openvm-algebra-circuit = { workspace = true }
openvm-ecc-circuit = { workspace = true }
openvm-pairing-transpiler = { workspace = true }
openvm-cuda-backend = { workspace = true, optional = true }
openvm-stark-sdk = { workspace = true, optional = true }

num-bigint = { workspace = true }
num-traits = { workspace = true }
strum = { workspace = true }
derive_more = { workspace = true }
derive-new = { workspace = true }
rand = { workspace = true }
eyre = { workspace = true }
serde = { workspace = true, features = ["derive", "std"] }
halo2curves-axiom = { workspace = true }
cfg-if = { workspace = true }

[target.'cfg(not(target_os = "zkvm"))'.dependencies]
openvm-pairing-guest = { workspace = true }

[dev-dependencies]
openvm-stark-sdk = { workspace = true }
openvm-mod-circuit-builder = { workspace = true, features = ["test-utils"] }
openvm-circuit = { workspace = true, features = ["test-utils"] }
halo2curves-axiom = { workspace = true }
openvm-ecc-guest = { workspace = true }
openvm-pairing-guest = { workspace = true, features = [
    "halo2curves",
    "bls12_381",
    "bn254",
] }

[features]
default = []
tco = ["openvm-rv32im-circuit/tco", "openvm-ecc-circuit/tco"]
cuda = [
    "dep:openvm-cuda-backend",
    "dep:openvm-stark-sdk",
    "openvm-circuit-primitives/cuda",
    "openvm-circuit/cuda",
    "openvm-algebra-circuit/cuda",
    "openvm-ecc-circuit/cuda",
]
touchemall = [
    "cuda",
    "openvm-circuit/touchemall",
    "openvm-circuit-primitives/touchemall",
    "openvm-cuda-backend/touchemall",
    "openvm-algebra-circuit/touchemall",
    "openvm-ecc-circuit/touchemall",
    "openvm-rv32im-circuit/touchemall",
]
